plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'org.jetbrains.kotlin.kapt'
    id 'androidx.navigation.safeargs.kotlin'
    id 'com.google.devtools.ksp'
}

android {
    compileSdk compile_sdk_version

    defaultConfig {
        applicationId "com.tsarsprocket.reportmid"
        minSdk min_sdk_version
        targetSdk target_sdk_version
        versionCode 1
        versionName "1.0"
        multiDexEnabled true

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"

/*
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [
                        "room.schemaLocation"  : "$projectDir/schemas".toString(),
                        "room.incremental"     : "true",
                        "room.expandProjection": "true"]
            }
        }
*/
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
        viewBinding true
        compose true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_18
        targetCompatibility JavaVersion.VERSION_18
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_18.toString()
    }

    composeOptions {
        kotlinCompilerExtensionVersion = composeCompilerVersion
    }

    namespace 'com.tsarsprocket.reportmid'
}

repositories {
    mavenCentral() // for Orianna API
}

dependencies {

    implementation libs.androidx.multidex
    implementation libs.android.support.multidex

    implementation fileTree(dir: 'libs', include: ['*.jar'])
//    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"

    implementation project(path: ':app-api')
    implementation project(path: ':view-state-impl')
    implementation project(path: ':lol-resource-lib')
    implementation project(path: ':landing-impl')
    implementation project(path: ':lol')
    implementation project(path: ':lol-room')
    implementation project(path: ':base')
    implementation project(path: ':lol-services-impl')
    implementation project(path: ':theme')
    implementation project(path: ':league-position-impl')
    implementation project(path: ':data-dragon-impl')
    implementation project(path: ':summoner-impl')
    implementation project(path: ':state-impl')
    implementation project(path: ':request-manager-impl')

    implementation project(path: ':lazy-proxy-ksp')
    ksp project(path: ':lazy-proxy-ksp')

    // Dagger
    implementation libs.dagger
    implementation libs.dagger.android
    kapt libs.dagger.compiler
    kapt libs.dagger.android.processor

    // AndroidX
    implementation libs.reactivestreams
    implementation libs.androidx.appcompat
    implementation libs.androidx.activity.ktx
    implementation libs.androidx.core.ktx
    implementation libs.androidx.constraintlayout
    implementation libs.androidx.drawerlayout
    implementation libs.androidx.legacy.support.v4
    implementation libs.androidx.lifecycle.extensions
    implementation libs.androidx.lifecycle.livedata.ktx
    implementation libs.androidx.lifecycle.viewmodel.ktx
    implementation libs.androidx.preference.ktx
    testImplementation libs.junit
    androidTestImplementation libs.androidx.junit
    androidTestImplementation libs.androidx.espresso.core

    // Room
    kapt libs.androidx.room.compiler

    // Navigation
    implementation libs.androidx.navigation.fragment.ktx
    implementation libs.androidx.navigation.ui.ktx

    // Orianna API
    implementation "com.merakianalytics.orianna:orianna-android:4.0.0-rc6" // Will be sun set after the migration to the RIOT API

    // Rx
    implementation libs.rxandroid
    implementation libs.rxkotlin

    // Material
    implementation libs.material

    // GSON
    implementation libs.gson

    // Retrofit
    implementation libs.retrofit
    implementation libs.adapter.rxjava2
    implementation libs.converter.gson

    // Paging 3
    implementation libs.androidx.paging.runtime.ktx
    testImplementation libs.androidx.paging.common.ktx // alternatively - without Android dependencies for tests
    implementation libs.androidx.paging.rxjava2.ktx // optional - RxJava2 support

    // Channels
    implementation libs.kotlinx.coroutines.core

    // Flow
    implementation libs.kotlinx.coroutines.rx2

    // Compose
    def composeBom = platform(libs.compose.bom)
    implementation composeBom
    androidTestImplementation composeBom

    // Compose Material 3
    implementation libs.compose.material3

    // Compose preview support
    implementation libs.compose.ui.tooling.preview
    debugImplementation libs.compose.ui.tooling.main

    // Optional - Integration with activities
    // implementation 'androidx.activity:activity-compose:1.7.0'
    // Optional - Integration with ViewModels
    implementation libs.androidx.lifecycle.viewmodel.compose
    // Optional - Integration with RxJava
    // implementation 'androidx.compose.runtime:runtime-rxjava2'
}
